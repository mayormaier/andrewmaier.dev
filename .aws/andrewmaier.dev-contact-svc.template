AWSTemplateFormatVersion: 2010-09-09
Description: Lambda to enable contact forms via SNS.
Parameters: 
  destinationEmail: 
    Description: Address that contact emails will be forwarded to
    Type: String
    AllowedPattern: ^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$

  senderEmail:
    Description: The source address of all contact emails
    Type: String
    AllowedPattern: ^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$

  senderIDArn:
    Description: ARN for SES verified sender identity
    Type: String
  
  application:
    Description: Application Name
    Type: String

  environment:
    Description: Environment
    Type: String

  functionCorsDomains:
    Description: A comma-separated list of domains that allow access to the backend service
    Type: CommaDelimitedList

  lambdaSGList:
    Description: list of security groups to be applied to lambda function
    Type: CommaDelimitedList
  
  lambdaSubnetList:
    Description: list of security groups to be applied to lambda function
    Type: CommaDelimitedList

  lambdaImageRepo:
    Type: String
    Description: URI of the ECR Repository hosting the lambda code

Resources: 

  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Backend service to enable dynamic contact forms
      FunctionName: !Join
        - "-"
        - - !Ref application
          - !Ref environment
          - contact-backend
      MemorySize: 128
      Role: !GetAtt lambdaExecutionRole.Arn
      VpcConfig:
        SecurityGroupIds: !Ref lambdaSGList
        SubnetIds: !Ref lambdaSubnetList
      Environment:
        Variables:
          CONTACT_SENDER_EMAIL: !Ref senderEmail
          CONTACT_DESTINATION_EMAIL: !Ref destinationEmail
          CONTACT_SENDER_IDENTITY: !Ref senderIDArn
      Code:
        ImageUri: !Sub "${lambdaImageRepo}:latest"
      PackageType: Image
      Tags:
        - Key: application
          Value: !Ref application
        - Key: environment
          Value: !Ref environment

  lambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
          - Effect: "Allow"
            Principal:
              Service: "events.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "ecr-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:GetDownloadUrlForLayer"
                Resource: !Sub
                  - "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:${repoName}"
                  - repoName: !Select [1, !Split ["/", !Ref lambdaImageRepo]]
        - PolicyName: "ses-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "ses:*"
                Resource: "*"
        - PolicyName: "vpc-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "ec2:CreateNetworkInterface"
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                  - "ec2:AssignPrivateIpAddresses"
                  - "ec2:UnassignPrivateIpAddresses"
                Resource: "*"
      RoleName: !Join 
        - "-"
        - - !Ref application
          - !Ref environment
          - "lambda"
      Tags:
          - Key: application
            Value: !Ref application
          - Key: environment
            Value: !Ref environment

  lambdaVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref lambdaFunction

  lambdaURL:
    Type: AWS::Lambda::Url
    Properties: 
      AuthType: NONE
      Cors:
        AllowCredentials: false  
        AllowMethods:
            - POST
        AllowOrigins: !Ref functionCorsDomains
      TargetFunctionArn: !Ref lambdaFunction

Outputs:
  FunctionURL:
    Description: URL of the backend lambda function
    Value: !GetAtt lambdaURL.FunctionUrl
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploys a static site to AWS via s3 hosting and HTTPS via CloudFront.",
    "Metadata": {

    },

    "Parameters": {
        
        "Application": {
            "Type": "String",
            "Description": "What application is this?"
        },

        "Environment": {
            "Type": "String",
            "AllowedValues": ["dev", "prod"],
            "Description": "Which environment are we in?"
        },

        "CertificateArn": {
            "Description": "The ARN for the certificate issued for CloudFront hosting. See the andrewmaier.dev-acm.template file.",
            "Type": "String",
            "Default": "-"
        },

        "FQDN": {
            "Description": "The domain name which should be linked to the certificate",
            "Type": "String",
            "AllowedPattern": "^((?!-))(xn--)?[a-z0-9][a-z0-9-_]{0,61}[a-z0-9]{0,1}\\.(xn--)?([a-z0-9\\-]{1,61}|[a-z0-9-]{1,30}\\.[a-z]{2,})$",
            "Default": "example.com"
        }
    },
    
    "Resources": {

        "s3HostingBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Fn::Join": ["-", [{
                        "Ref": "Application"
                    }, {
                        "Ref": "Environment"
                    }]]
                }
            }
        },

        "s3HostingBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "s3HostingBucket"
                },
                "PolicyDocument": {
                    "Id": "Web-Hosting-Policy",
                    "Version": "2012-10-17",
                    "Statement": {
                        "Sid": "PublicReadForGetBucketObjects",
                        "Effect": "Allow",
                        "Principal": {
                            "AWS": { "Fn::Sub": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CFOriginAccessIdentity}" }
                        },
                        "Action": "s3:GetObject",
                        "Resource": { "Fn::Sub": "arn:aws:s3:::${s3HostingBucket}/*" }
                    }
                }
            }
        },
        
        "CFOriginAccessIdentity": {
            "Description": "Access patterns for CloudFront distribution",
            "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "Properties": {
                "CloudFrontOriginAccessIdentityConfig": {
                    "Comment": { "Fn::Sub": [ "CloudFront Origin identity for ${DomainName}", {"DomainName": { "Ref": "FQDN" }}]}
                }
            }
        },

        "CFCachePolicy": {
            "Description": "Requred Policy for caching elements in CloudFront",
            "Type": "AWS::CloudFront::CachePolicy",
            "Properties": {
                "CachePolicyConfig": {
                    "Name": "CFCachingPolicy",
                    "Comment": { "Fn::Sub": "${FQDN} CloudFront caching policy" },
                    "DefaultTTL": 86400,
                    "MaxTTL": 31536000,
                    "MinTTL": 0,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingGzip": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": ["GET"]
                        },
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "none"
                        }
                    }
                }
            }
        },

        "cloudfrontDistribution": {
           "Description": "CloudFront Distribution for the site",
           "Type": "AWS::CloudFront::Distribution",
           "Properties": {
               "DistributionConfig": {
                   "Aliases": [{ "Ref": "FQDN" }],
                   "DefaultCacheBehavior": {
                       "TargetOriginId": {"Fn::Sub": "S3-origin-${s3HostingBucket}"},
                       "ViewerProtocolPolicy": "redirect-to-https",
                       "CachePolicyId": {"Ref": "CFCachePolicy"}
                   },
                   "DefaultRootObject": "index.html",
                   "Enabled": true,
                   "Origins": [
                        {
                            "DomainName": { "Fn::GetAtt": [ "s3HostingBucket", "RegionalDomainName" ]},
                            "Id": { "Fn::Sub": "S3-origin-${s3HostingBucket}" },
                            "S3OriginConfig": {
                                "OriginAccessIdentity": { "Fn::Sub": "origin-access-identity/cloudfront/${CFOriginAccessIdentity}" }
                            }
                        }
                    ],
                   "PriceClass": "PriceClass_100",
                   "ViewerCertificate": {
                       "AcmCertificateArn": { "Ref": "CertificateArn" },
                       "MinimumProtocolVersion": "TLSv1.2_2018",
                       "SslSupportMethod": "sni-only"
                   } 
               }
           }
        }
    },

    "Outputs": {
        
        "CloudfrontDistributionURL" : {
          "Value" : { "Fn::GetAtt": ["cloudfrontDistribution", "DomainName"] }
        }
    }

}

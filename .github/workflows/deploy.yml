name: Deploy to Production

on: 
  release:
    types:
    - published

jobs:
  deploy-backend:
    name: Build and Deploy Backend to AWS
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@master

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd ./backend
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg=CONTACT_SENDER_EMAIL=${{ CONTACT_SENDER_EMAIL }} --build-arg=CONTACT_SENDER_IDENTITY=${{ CONTACT_SENDER_IDENTITY }} --build-arg=CONTACT_DESTINATION_EMAIL=${{ CONTACT_DESTINATION_EMAIL }} -f ./lambda-dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

        
  deploy-frontend:
    name: Build and Deploy Frontend to AWS
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:

    - uses: actions/checkout@master

    - name: Build Frontend
      run:  |
        cd ./frontend
        npm install
        npm run build

    - name: Upload files to S3
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-2'
        SOURCE_DIR: 'frontend/dist'

    - name: Invalidate CloudFront
      uses: chetan/invalidate-cloudfront-action@v2
      env:
        DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
        AWS_REGION: "us-east-1"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        PATHS: '/*'